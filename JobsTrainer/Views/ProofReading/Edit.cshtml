@model JobsTrainer.DTOs.TrainJobDto

@{
    ViewData["Title"] = "Edit";

}

<h1>Edit</h1>

<h4 style="display:inline-block">TrainJob</h4>
<span>
    @if (Model.PrevJobId.HasValue)
    {
        <a asp-action="Edit" asp-route-id="@Model.PrevJobId" asp-route-search="@ViewBag.SearchTerm"  asp-route-isPositive="@ViewBag.IsPositive">Prev</a>
    }
    else
    {
        <span>Prev</span>
    }
    &nbsp;
    @if (Model.NextJobId.HasValue)
    {
        <a asp-action="Edit" asp-route-id="@Model.NextJobId" asp-route-search="@ViewBag.SearchTerm"  asp-route-isPositive="@ViewBag.IsPositive">Next</a>
    }
    else
    {
        <span>Next</span>
    }
</span>
<hr />
<div class="row">
    <div class="col-md-10">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="JobId" />
            
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <span>
                    @Model.Title
                </span>
                <a target="_blank" href=@string.Format("https://www.linkedin.com/jobs/view/{0}", Model.JobId)>Link</a>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample" class="control-label"></label>
                <p>
                    @Html.Raw(Model.Sample)
                </p>
                <span asp-validation-for="Sample" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Sentiment" /> @Html.DisplayNameFor(model => model.Sentiment)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control" />
                <span asp-validation-for="Country" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Company" class="control-label"></label>
                <span>
                    @Model.Company
                </span>
                <span asp-validation-for="Company" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CompanyLink" class="control-label"></label>
                <input asp-for="CompanyLink" class="form-control" /> <a target="_blank" href=@string.Format("https://www.linkedin.com{0}", Model.CompanyLink)>Link</a>
                <span asp-validation-for="CompanyLink" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreatedAt" class="control-label"></label>
                <span>
                    @Model.CreatedAt
                </span>
                <span asp-validation-for="CreatedAt" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsEasy" /> @Html.DisplayNameFor(model => model.IsEasy)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
